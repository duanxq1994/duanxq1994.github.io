<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[git 方面]]></title>
    <url>%2F2017%2F08%2F06%2Fgit-%E6%96%B9%E9%9D%A2%2F</url>
    <content type="text"><![CDATA[接触git刚开始接触git是在15年8月份，那时我刚毕业，第一份工作。当时是同事建议使用sourceTree（git图形化工具），我觉得很好用，当然也确实很好用，功能很强大各种操作、状态都很直接很容易，便于操作。尤其是当你理解了git的操作流程以后，各种merge、cherry-pick、reset等等操作，简直不要太方便，graph也非常的直观。 进阶后面接触到了IDEA，它里面自带了版本控制，功能、实用性、外观都可以和sourceTree相媲美，后面使用sourceTree就少了。前不久一同事让我帮忙把一个本地项目上传到git服务上建立一个分支，他本地只有git客户端，当时我就想这还不简单，但后来事实是，我折腾了半天也没有把项目从服务器上clone下来。因为我对git命令行完全不熟悉，git-gui也所知甚少。后来我回到自己座位上，上网找了下gui的使用方法，也成功的从线上clone下来了，基本操作也照着走了一遍。认为也没什么难得就这样。昨天看了一篇文章，讲的是hexo，也就是现在在使用的东西，今天闲来无事，也就摸索摸索。因为其中又涉及到git的操作，我突然冒出一个想法，想用git命令行走一遍流程，不用说也知道，各种问题1$ git init 这个命令我甚至是第一次用到，还有很多命令，我也是基本没有使用过12$ git clone ** dir$ git remote add origin ** 总结有句话叫 “使用命令行的瞧不起用图像界面的”，想想可能真的不全是在装逼命令行是最能体现作者设计的初衷，或许使用图形界面的你，照样可以操作的行云流水，但会使用命令行操作，理解软件的本质，对你的理解、运用会大有裨益。 千万不要会用了，就万事大吉了，要多去思考，探索总是好的]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F08%2F06%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>hello</category>
      </categories>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
</search>
